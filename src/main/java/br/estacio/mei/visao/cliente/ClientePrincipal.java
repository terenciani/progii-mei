/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.estacio.mei.visao.cliente;

import br.estacio.mei.dao.ClienteDao;
import br.estacio.mei.dao.implementacao.ClienteDaoEstatico;

import br.estacio.mei.model.Cliente;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ericvdias
 */
public class ClientePrincipal extends javax.swing.JPanel {

    ClienteDao clienteDao = new ClienteDaoEstatico();
    Cliente cliente = new Cliente();

    /**
     * Creates new form GerenciamentoCliente
     */
    public ClientePrincipal() {
        initComponents();
        //==> Quando inicia a tela, exibe os clientes cadastrados <<==\\
        //Cliente cliente = new Cliente();
        DefaultTableModel modeloDeColuna = (DefaultTableModel) tbListaClientes.getModel();
        ArrayList<Cliente> listaDeClientes = clienteDao.buscarClientes();

        for (int i = 0; i < listaDeClientes.size(); i++) {
            Cliente exibeCliente = listaDeClientes.get(i);
            Object[] linha = new Object[5];
            linha[0] = exibeCliente.getCodigo();
            linha[1] = exibeCliente.getNome();
            linha[2] = exibeCliente.getTelefone();
            linha[3] = exibeCliente.getCpfCnpj();
            linha[4] = exibeCliente.getEmail(); // Endereco Criar classe. 
            modeloDeColuna.addRow(linha);

        }

        //tbListaClientes.getTableHeader();
    }

    public ClientePrincipal(JFrame jFrame, boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelDinamico = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbListaClientes = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        btnEditarCliente = new javax.swing.JButton();
        btnExcluirCliente = new javax.swing.JButton();
        btnAdicionarNovoCliente = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtCampoBusca = new javax.swing.JTextField();
        btnBuscarClientes = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(786, 531));
        setLayout(new java.awt.BorderLayout());

        panelDinamico.setLayout(new java.awt.BorderLayout());

        tbListaClientes.setBackground(new java.awt.Color(204, 204, 204));
        tbListaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Telefone", "CPF/CNPJ", "Email"
            }
        ));
        jScrollPane2.setViewportView(tbListaClientes);

        panelDinamico.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        btnEditarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/editar_cliente.png"))); // NOI18N
        btnEditarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarClienteActionPerformed(evt);
            }
        });

        btnExcluirCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/deleteUser20.png"))); // NOI18N
        btnExcluirCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirClienteActionPerformed(evt);
            }
        });

        btnAdicionarNovoCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/addUser20.png"))); // NOI18N
        btnAdicionarNovoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarNovoClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAdicionarNovoCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnEditarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnExcluirCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(btnAdicionarNovoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(btnExcluirCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(332, Short.MAX_VALUE))
        );

        panelDinamico.add(jPanel5, java.awt.BorderLayout.LINE_END);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(786, 80));

        btnBuscarClientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/findUser20.png"))); // NOI18N
        btnBuscarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClientesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(txtCampoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(339, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBuscarClientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCampoBusca))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        panelDinamico.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        add(panelDinamico, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarNovoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarNovoClienteActionPerformed

        String tipo = "insert";

        //==> Faz  uma busca dos clientes para trazer o último código cadastrado <==\\
        int codigoNovoCliente = 0;
        clienteDao.buscarClientes();

        DefaultTableModel modeloDeColuna = (DefaultTableModel) tbListaClientes.getModel();
        ArrayList<Cliente> listaDeClientes = clienteDao.buscarClientes();
        int aux = 0;
        for (int i = 0; i < listaDeClientes.size(); i++) {
            Cliente exibeCliente = listaDeClientes.get(i);
            //==> Lógica para pegar o maior código <==\\
            if (aux == 0) {
                codigoNovoCliente = exibeCliente.getCodigo();
                aux = 1;
            } else if (exibeCliente.getCodigo() > codigoNovoCliente) {
                codigoNovoCliente = exibeCliente.getCodigo();
            }
        }

        //==> Se não encontrou nenhum cliente cadastrado, o primeiro código é 1 <==\\
        if (codigoNovoCliente == 0) {
            codigoNovoCliente = 1;
        } else {
            //==> Se encontrou, incrementa 1, para não repetir o mesmo código <==\\
            codigoNovoCliente += 1;
        }

        //==> Abre a tela para inserir dados do cliente, passando o código e o tipo (insert=novo ou update=atualiza) <==\\
        InformaDadosCliente adicionarCliente = new InformaDadosCliente(codigoNovoCliente, tipo);
        panelDinamico.removeAll();
        panelDinamico.add(adicionarCliente);
        panelDinamico.validate();
        panelDinamico.repaint();
    }//GEN-LAST:event_btnAdicionarNovoClienteActionPerformed

    private void btnEditarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarClienteActionPerformed
        if (tbListaClientes.getSelectedRow() >= 0) {
            //==> Pega o cógido do cliente selecionado na tabela <==\\
            String tipo = "update";
            int linha = tbListaClientes.getSelectedRow();

            int codigo = (int) tbListaClientes.getModel().getValueAt(linha, 0);
            //JPanel onde tem a tabela
            //DefaultTableModel table = (DefaultTableModel) tbListaClientes.getModel();

            //clienteEdit = table.getValueAt(tbListaClientes.getSelectedRow(), 1).toString();
            //==> Abre a tela de edição, passando o código do cliente <==\\
            InformaDadosCliente adicionarCliente = new InformaDadosCliente(codigo, tipo);
            panelDinamico.removeAll();
            panelDinamico.add(adicionarCliente);
            panelDinamico.validate();
            panelDinamico.repaint();
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um Cliente!");
        }

    }//GEN-LAST:event_btnEditarClienteActionPerformed

    private void btnBuscarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClientesActionPerformed
        ((DefaultTableModel) tbListaClientes.getModel()).setRowCount(0);

        clienteDao.buscarClientes();

        DefaultTableModel modeloDeColuna = (DefaultTableModel) tbListaClientes.getModel();
        ArrayList<Cliente> listaDeClientes = clienteDao.buscarClientes();

        for (int i = 0; i < listaDeClientes.size(); i++) {
            Cliente exibeCliente = listaDeClientes.get(i);
            String nome = txtCampoBusca.getText();

            //==> Faz a busca do cliente por qualquer parte do seu nome <==\\
            if (exibeCliente.getNome().contains(nome)) {

                Object[] linha = new Object[5];

                linha[0] = exibeCliente.getCodigo();
                linha[1] = exibeCliente.getNome();
                linha[2] = exibeCliente.getTelefone();
                linha[3] = exibeCliente.getCpfCnpj();
                linha[4] = exibeCliente.getEmail(); // Endereco Criar classe. 
                modeloDeColuna.addRow(linha);
            }
        }
    }//GEN-LAST:event_btnBuscarClientesActionPerformed

    private void btnExcluirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirClienteActionPerformed
        if (tbListaClientes.getSelectedRow() >= 0) {

            int resposta = JOptionPane.showConfirmDialog(null, "Confirma a exclusão do cliente?", "Excluir Cliente!", JOptionPane.YES_NO_OPTION);

            if (resposta == 0) {
                int linha = tbListaClientes.getSelectedRow();
                int codigo = (int) tbListaClientes.getModel().getValueAt(linha, 0);

                //==> Chama o método para excluir o cliente selecionado <==\\
                clienteDao.excluirCliente(codigo);

                //==> Faz nova busca, após a exclusão, atualizando a tabela de clientes <==\\
                ((DefaultTableModel) tbListaClientes.getModel()).setRowCount(0);
                clienteDao.buscarClientes();
                DefaultTableModel modeloDeColuna = (DefaultTableModel) tbListaClientes.getModel();
                ArrayList<Cliente> listaDeClientes = clienteDao.buscarClientes();

                for (int i = 0; i < listaDeClientes.size(); i++) {
                    Cliente exibeCliente = listaDeClientes.get(i);
                    String nome = txtCampoBusca.getText();

                    //==> Faz a busca do cliente por qualquer parte do seu nome <==\\
                    if (exibeCliente.getNome().contains(nome)) {

                        Object[] linha1 = new Object[5];

                        linha1[0] = exibeCliente.getCodigo();
                        linha1[1] = exibeCliente.getNome();
                        linha1[2] = exibeCliente.getTelefone();
                        linha1[3] = exibeCliente.getCpfCnpj();
                        linha1[4] = exibeCliente.getEmail(); // Endereco Criar classe. 
                        modeloDeColuna.addRow(linha1);
                    }
                }
                JOptionPane.showMessageDialog(null, "Cliente Removido!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um Cliente!");
        }

    }//GEN-LAST:event_btnExcluirClienteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarNovoCliente;
    private javax.swing.JButton btnBuscarClientes;
    private javax.swing.JButton btnEditarCliente;
    private javax.swing.JButton btnExcluirCliente;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelDinamico;
    private javax.swing.JTable tbListaClientes;
    private javax.swing.JTextField txtCampoBusca;
    // End of variables declaration//GEN-END:variables

    public void setLocationRelativeTo(Object object) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}

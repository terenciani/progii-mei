/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.estacio.mei.visao.produto;

import br.estacio.mei.dao.ProdutoDao;
import br.estacio.mei.dao.implementacao.ProdutoDaoEstatico;
import br.estacio.mei.model.Produto;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aluno
 */
public class ProdutoPrincipal extends javax.swing.JPanel {

    ProdutoDao produtoDao = new ProdutoDaoEstatico();

    /**
     * Creates new form ProdutoPrincipal
     */
    public ProdutoPrincipal() {
        initComponents();
        msgErro.setVisible(false);
        produtos.setRowHeight(15);

        DefaultTableModel modeloDeColunasDaTabela = (DefaultTableModel) produtos.getModel();

        ArrayList<Produto> listaDeProdutos = produtoDao.buscarProdutos();
        for (int i = 0; i < listaDeProdutos.size(); i++) {
            Produto p = listaDeProdutos.get(i);
            Object[] dadosDaLinha = new Object[4];
            dadosDaLinha[0] = p.getCodigo();
            dadosDaLinha[1] = p.getNome();
            dadosDaLinha[2] = p.getCategoria();
            modeloDeColunasDaTabela.addRow(dadosDaLinha);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelDinamico1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        novoProduto1 = new javax.swing.JButton();
        buscarProduto1 = new javax.swing.JButton();
        campoBusca1 = new javax.swing.JScrollPane();
        buscar1 = new javax.swing.JTextPane();
        excluirProduto1 = new javax.swing.JButton();
        tipoPesquisa1 = new javax.swing.JComboBox<>();
        filtrarPor1 = new javax.swing.JLabel();
        panelErro1 = new javax.swing.JPanel();
        msgErro1 = new javax.swing.JLabel();
        tbProdutos = new javax.swing.JPanel();
        alterarProduto = new javax.swing.JButton();
        tabelaProduto = new javax.swing.JScrollPane();
        produtos = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        panelDinamico1.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setToolTipText("");

        novoProduto1.setBackground(new java.awt.Color(102, 102, 102));
        novoProduto1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Incluir_black.png"))); // NOI18N
        novoProduto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoProdutoActionPerformed(evt);
            }
        });

        buscarProduto1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/re_search.png"))); // NOI18N
        buscarProduto1.setText("Buscar");
        buscarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarProdutoActionPerformed(evt);
            }
        });

        buscar.setToolTipText("");
        buscar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        campoBusca1.setViewportView(buscar1);

        excluirProduto1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/cancel.png"))); // NOI18N
        excluirProduto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirProdutoActionPerformed(evt);
            }
        });

        tipoPesquisa1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código", "Categoria", "Nome", "Valor", "Qtde Estoque", "Descrição" }));
        tipoPesquisa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoPesquisaActionPerformed(evt);
            }
        });

        filtrarPor1.setText("Filtrar por");

        msgErro1.setText("Erros");

        javax.swing.GroupLayout panelErro1Layout = new javax.swing.GroupLayout(panelErro1);
        panelErro1.setLayout(panelErro1Layout);
        panelErro1Layout.setHorizontalGroup(
            panelErro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelErro1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(msgErro1)
                .addGap(398, 398, 398))
        );
        panelErro1Layout.setVerticalGroup(
            panelErro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(msgErro1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
        );

        tbProdutos.setLayout(new java.awt.BorderLayout());

        alterarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/editar.png"))); // NOI18N
        alterarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarProdutoActionPerformed(evt);
            }
        });

        produtos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Categoria", "Nome", "Valor", "Qtd em Estoque", "Descrição"
            }
        ));
        tabelaProduto.setViewportView(produtos);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(841, 841, 841)
                        .addComponent(tbProdutos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(filtrarPor1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tipoPesquisa1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoBusca1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buscarProduto1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                            .addComponent(tabelaProduto)
                            .addComponent(panelErro1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(novoProduto1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(excluirProduto1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(alterarProduto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tbProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(filtrarPor1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tipoPesquisa1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(buscarProduto1)
                                .addGap(10, 10, 10)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(panelErro1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tabelaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(novoProduto1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(alterarProduto)
                                .addGap(32, 32, 32)
                                .addComponent(excluirProduto1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(campoBusca1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        panelDinamico1.add(jPanel3, java.awt.BorderLayout.CENTER);

        add(panelDinamico1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void alterarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alterarProdutoActionPerformed

    private void tipoPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoPesquisaActionPerformed

    private void excluirProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirProdutoActionPerformed
        if (produtos.getSelectedRow() >= 0) {
            int resposta = JOptionPane.showConfirmDialog(null, "Confirma a exclusão do Produto?", "Excluir Produto!", JOptionPane.YES_NO_OPTION);

            if (resposta == 0) {
                int linha = produtos.getSelectedRow();
                int codigo = (int) produtos.getModel().getValueAt(linha, 0);
                Produto produto = new Produto();
                produto.setCodigo(codigo);
                produtoDao.alterar(produto);

                ((DefaultTableModel) produtos.getModel()).setRowCount(0);
                produtoDao.buscarProdutos();
                DefaultTableModel modeloDeColunaDaTabela = (DefaultTableModel) produtos.getModel();
                ArrayList<Produto> listaDeProdutos = produtoDao.buscarProdutos();

                for (int i = 0; i < listaDeProdutos.size(); i++) {
                    Produto exibeProduto = listaDeProdutos.get(i);
                    String nome = buscar.getText();

                    if (exibeProduto.getNome().contains(nome)) {

                        Produto p = listaDeProdutos.get(i);
                        Object[] dadosDaLinha1 = new Object[4];

                        dadosDaLinha1[0] = p.getCodigo();
                        dadosDaLinha1[1] = p.getCategoria();
                        dadosDaLinha1[2] = p.getNome();
                        modeloDeColunaDaTabela.addRow(dadosDaLinha1);
                    }
                }
                JOptionPane.showMessageDialog(null, "Produto Removido!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um Produto!");
        }
    }//GEN-LAST:event_excluirProdutoActionPerformed

    private void novoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoProdutoActionPerformed
        String tipo = "insert";
        int codigoNovoProduto = 0;
        if (codigoNovoProduto == 0) {
            codigoNovoProduto = 1;
        } else {
            //==> Se encontrou, incrementa 1, para não repetir o mesmo código <==\\
            codigoNovoProduto += 1;
        }
        DadosProduto dadosProduto = new DadosProduto(codigoNovoProduto, tipo);
        panelDinamico.removeAll();
        panelDinamico.add(dadosProduto);
        panelDinamico.validate();
        panelDinamico.repaint();
    }//GEN-LAST:event_novoProdutoActionPerformed

    private void buscarProdutoActionPerformed(java.awt.event.ActionEvent evt) {
        int itemSelecionado = tipoPesquisa.getSelectedIndex();
        DefaultTableModel modeloDeColunasDaTabela = (DefaultTableModel) produtos.getModel();
        switch (itemSelecionado) {
            case 0:
                try {
                    msgErro.setVisible(false);
                    int pesqCodigo = Integer.parseInt(buscar.getText());
                    while (modeloDeColunasDaTabela.getRowCount() != 0) {
                        modeloDeColunasDaTabela.removeRow(0);
                    }
                    ArrayList<Produto> produtosPorCodigo = produtoDao.pesquisarPorCodigo(pesqCodigo);
                    for (int i = 0; i < produtosPorCodigo.size(); i++) {
                        Produto p = produtosPorCodigo.get(i);
                        Object[] dadosDaLinha = new Object[4];
                        dadosDaLinha[0] = p.getCodigo();
                        dadosDaLinha[1] = p.getNome();
                        dadosDaLinha[2] = p.getCategoria();
                        modeloDeColunasDaTabela.addRow(dadosDaLinha);
                    }
                } catch (Exception e) {
                    msgErro.setText("Pesquisa Invalida!");
                    msgErro.setVisible(true);
                }

                break;
            case 1:
                try {
                    msgErro.setVisible(false);
                    String pesqNome = buscar.getText();
                    while (modeloDeColunasDaTabela.getRowCount() != 0) {
                        modeloDeColunasDaTabela.removeRow(0);
                    }
                    ArrayList<Produto> produtosPorNome = produtoDao.pesquisarPorNome(pesqNome);
                    for (int i = 0; i < produtosPorNome.size(); i++) {
                        Produto p = produtosPorNome.get(i);
                        Object[] dadosDaLinha = new Object[4];
                        dadosDaLinha[0] = p.getCodigo();
                        dadosDaLinha[1] = p.getNome();
                        dadosDaLinha[2] = p.getCategoria();
                        modeloDeColunasDaTabela.addRow(dadosDaLinha);
                    }
                } catch (Exception e) {
                    msgErro.setText("Pesquisa Invalida!");
                    msgErro.setVisible(true);
                }
                break;
            case 2:
                try {
                    msgErro.setVisible(false);
                    int pesqCategoria = Integer.parseInt(buscar.getText());
                    while (modeloDeColunasDaTabela.getRowCount() != 0) {
                        modeloDeColunasDaTabela.removeRow(0);
                    }
                    ArrayList<Produto> produtosPorCategoria = produtoDao.pesquisarPorCategoria(pesqCategoria);
                    for (int i = 0; i < produtosPorCategoria.size(); i++) {
                        Produto p = produtosPorCategoria.get(i);
                        Object[] dadosDaLinha = new Object[4];
                        dadosDaLinha[0] = p.getCodigo();
                        dadosDaLinha[1] = p.getNome();
                        dadosDaLinha[2] = p.getCategoria();
                        modeloDeColunasDaTabela.addRow(dadosDaLinha);
                    }
                } catch (Exception e) {
                    msgErro.setText("Pesquisa Invalida!");
                    msgErro.setVisible(true);
                }
                break;

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterarProduto;
    private javax.swing.JTextPane buscar;
    private javax.swing.JTextPane buscar1;
    private javax.swing.JButton buscarProduto;
    private javax.swing.JButton buscarProduto1;
    private javax.swing.JScrollPane campoBusca;
    private javax.swing.JScrollPane campoBusca1;
    private javax.swing.JButton excluirProduto;
    private javax.swing.JButton excluirProduto1;
    private javax.swing.JLabel filtrarPor;
    private javax.swing.JLabel filtrarPor1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel msgErro;
    private javax.swing.JLabel msgErro1;
    private javax.swing.JButton novoProduto;
    private javax.swing.JButton novoProduto1;
    private javax.swing.JPanel panelDinamico;
    private javax.swing.JPanel panelDinamico1;
    private javax.swing.JPanel panelErro;
    private javax.swing.JPanel panelErro1;
    private javax.swing.JTable produtos;
    private javax.swing.JScrollPane tabelaProduto;
    private javax.swing.JPanel tbProdutos;
    private javax.swing.JComboBox<String> tipoPesquisa;
    private javax.swing.JComboBox<String> tipoPesquisa1;
    // End of variables declaration//GEN-END:variables

}
